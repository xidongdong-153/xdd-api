version: '3.9'

services:
  api:
    build:
      context: ..
      dockerfile: docker/Dockerfile
      args:
        - NODE_ENV=production
    container_name: xdd-api
    restart: always
    ports:
      - '${PORT:-3100}:${PORT:-3100}'
    environment:
      # 应用配置
      - NODE_ENV=production
      - APP_NAME=${APP_NAME:-xdd-api}
      - PORT=${PORT:-3100}
      - API_PREFIX=${API_PREFIX:-api}
      - API_VERSION=${API_VERSION:-v1}
      
      # 数据库配置
      - DB_HOST=db
      - DB_PORT=${DB_PORT:-3306}
      - DB_USERNAME=${DB_USERNAME:-xdd_user}
      - DB_PASSWORD=${DB_PASSWORD} 
      - DB_DATABASE=${DB_DATABASE:-xdd-api}
      - DB_TIMEZONE=${DB_TIMEZONE:-+08:00}
      
      # 日志配置
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_PATH=${LOG_PATH:-logs}
      - LOG_MAX_FILES=${LOG_MAX_FILES:-30d}
      - LOG_MAX_SIZE=${LOG_MAX_SIZE:-20m}
      
      # JWT配置
      - JWT_ACCESS_SECRET=${JWT_ACCESS_SECRET}  
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET} 
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-7d}
    volumes:
      - ../logs:/usr/src/app/logs
    networks:
      - app-network
    depends_on:
      - db

  db:
    image: mysql:8.0
    container_name: xdd-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}  
      MYSQL_DATABASE: ${DB_DATABASE:-xdd-api}
      MYSQL_USER: ${DB_USERNAME:-xdd_user}
      MYSQL_PASSWORD: ${DB_PASSWORD}  
    ports:
      - '${DB_PORT:-3306}:3306'
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network
    ulimits:
      nofile:
        soft: 20000
        hard: 40000
    command: 
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --default-authentication-plugin=mysql_native_password

  adminer:
    image: adminer:latest
    container_name: xdd-adminer
    restart: always
    ports:
      - '${ADMINER_PORT:-3006}:8080'
    environment:
      ADMINER_DEFAULT_SERVER: db
      ADMINER_DESIGN: nette
    networks:
      - app-network
    depends_on:
      - db

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data: {} 