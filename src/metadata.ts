/* eslint-disable */
export default async () => {
    const t = {
        ["./modules/user/constants/user.enum"]: await import("./modules/user/constants/user.enum"),
        ["./modules/user/entities/user.entity"]: await import("./modules/user/entities/user.entity"),
        ["./modules/rbac/entities/role.entity"]: await import("./modules/rbac/entities/role.entity"),
        ["./modules/rbac/entities/permission.entity"]: await import("./modules/rbac/entities/permission.entity"),
        ["./modules/demo/entities/demo.entity"]: await import("./modules/demo/entities/demo.entity"),
        ["./modules/core/types"]: await import("./modules/core/types"),
        ["./modules/demo/entities/demo-tree.entity"]: await import("./modules/demo/entities/demo-tree.entity")
    };
    return { "@nestjs/swagger": { "models": [[import("./modules/database/base/base.entity"), { "BaseEntity": { id: { required: true, type: () => Number, description: "\u4E3B\u952EID" }, createdAt: { required: true, type: () => Date, description: "\u521B\u5EFA\u65F6\u95F4", default: new Date() }, updatedAt: { required: true, type: () => Date, description: "\u66F4\u65B0\u65F6\u95F4", default: new Date() } } }], [import("./modules/rbac/entities/permission.entity"), { "Permission": { code: { required: true, type: () => String, description: "\u6743\u9650\u7F16\u7801", example: "user:create" }, name: { required: true, type: () => String, description: "\u6743\u9650\u540D\u79F0", example: "\u521B\u5EFA\u7528\u6237" }, description: { required: false, type: () => String, description: "\u6743\u9650\u63CF\u8FF0", example: "\u5141\u8BB8\u521B\u5EFA\u65B0\u7528\u6237" }, module: { required: true, type: () => String, description: "\u6240\u5C5E\u6A21\u5757", example: "user" }, action: { required: true, type: () => String, description: "\u64CD\u4F5C\u7C7B\u578B", example: "create" }, roles: { required: true, type: () => Object, description: "\u5173\u8054\u89D2\u8272\u5217\u8868" } } }], [import("./modules/rbac/entities/role.entity"), { "Role": { name: { required: true, type: () => String, description: "\u89D2\u8272\u540D\u79F0", example: "\u7BA1\u7406\u5458" }, description: { required: false, type: () => String, description: "\u89D2\u8272\u63CF\u8FF0", example: "\u7CFB\u7EDF\u7BA1\u7406\u5458\u89D2\u8272\uFF0C\u62E5\u6709\u6240\u6709\u7CFB\u7EDF\u6743\u9650" }, isSystem: { required: true, type: () => Boolean, description: "\u7CFB\u7EDF\u89D2\u8272\u6807\u5FD7", example: false, default: false }, permissions: { required: true, type: () => Object, description: "\u89D2\u8272\u6743\u9650\u5217\u8868" }, users: { required: true, type: () => Object, description: "\u89D2\u8272\u7528\u6237\u5217\u8868" } } }], [import("./modules/user/entities/user.entity"), { "User": { username: { required: true, type: () => String, description: "\u7528\u6237\u540D", example: "john_doe" }, password: { required: true, type: () => String, description: "\u7528\u6237\u5BC6\u7801", example: "********" }, email: { required: true, type: () => String, description: "\u7535\u5B50\u90AE\u7BB1", example: "john@example.com" }, status: { required: true, description: "\u7528\u6237\u72B6\u6001", example: "UserStatus.Active", enum: t["./modules/user/constants/user.enum"].UserStatus }, roles: { required: true, type: () => Object, description: "\u7528\u6237\u89D2\u8272\u5217\u8868" }, lastLoginAt: { required: false, type: () => Date, nullable: true, description: "\u6700\u540E\u767B\u5F55\u65F6\u95F4", example: "2024-03-20T12:00:00Z" } } }], [import("./modules/restful/dtos/paginate.dto"), { "PaginateDto": { page: { required: false, type: () => Number, description: "\u5F53\u524D\u9875", default: 1, minimum: 1 }, limit: { required: false, type: () => Number, description: "\u6BCF\u9875\u6570\u636E\u91CF", default: 10, minimum: 1 } } }], [import("./modules/user/dtos/user.dto"), { "CreateUserDto": { username: { required: true, type: () => String, description: "\u7528\u6237\u540D", example: "admin" }, password: { required: true, type: () => String, description: "\u5BC6\u7801", example: "Admin123!", minLength: 8, pattern: "/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/" }, email: { required: true, type: () => String, description: "\u90AE\u7BB1", example: "admin@example.com", format: "email" } }, "UpdateUserDto": { status: { required: false, description: "\u7528\u6237\u72B6\u6001", example: "active", enum: t["./modules/user/constants/user.enum"].UserStatus } }, "QueryUserDto": { username: { required: false, type: () => String, description: "\u7528\u6237\u540D", example: "admin" }, email: { required: false, type: () => String, description: "\u90AE\u7BB1", example: "admin@example.com" }, status: { required: false, description: "\u7528\u6237\u72B6\u6001", example: "active", enum: t["./modules/user/constants/user.enum"].UserStatus } }, "ChangePasswordDto": { oldPassword: { required: true, type: () => String, description: "\u65E7\u5BC6\u7801", example: "OldPass123!" }, newPassword: { required: true, type: () => String, description: "\u65B0\u5BC6\u7801", example: "NewPass123!", minLength: 8, pattern: "/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/" } } }], [import("./modules/rbac/dtos/rbac.dto"), { "CreateRoleDto": { name: { required: true, type: () => String, description: "\u89D2\u8272\u540D\u79F0", example: "admin" }, description: { required: false, type: () => String, description: "\u89D2\u8272\u63CF\u8FF0", example: "\u7CFB\u7EDF\u7BA1\u7406\u5458" }, permissions: { required: false, type: () => [Number], description: "\u6743\u9650ID\u5217\u8868", example: [1, 2, 3] } }, "UpdateRoleDto": {}, "QueryRoleDto": { name: { required: false, type: () => String, description: "\u89D2\u8272\u540D\u79F0", example: "admin" } }, "CreatePermissionDto": { code: { required: true, type: () => String, description: "\u6743\u9650\u7F16\u7801", example: "user:create" }, name: { required: true, type: () => String, description: "\u6743\u9650\u540D\u79F0", example: "\u521B\u5EFA\u7528\u6237" }, description: { required: false, type: () => String, description: "\u6743\u9650\u63CF\u8FF0", example: "\u5141\u8BB8\u521B\u5EFA\u65B0\u7528\u6237" }, module: { required: true, type: () => String, description: "\u6240\u5C5E\u6A21\u5757", example: "user" }, action: { required: true, type: () => String, description: "\u64CD\u4F5C\u7C7B\u578B", example: "create" } }, "UpdatePermissionDto": {}, "QueryPermissionDto": { code: { required: false, type: () => String, description: "\u6743\u9650\u7F16\u7801", example: "user:create" }, module: { required: false, type: () => String, description: "\u6240\u5C5E\u6A21\u5757", example: "user" } }, "AssignPermissionsDto": { permissions: { required: true, type: () => [Number], description: "\u6743\u9650ID\u5217\u8868", example: [1, 2, 3] } } }], [import("./modules/auth/dtos/auth.dto"), { "LoginDto": { credential: { required: true, type: () => String, description: "\u7528\u6237\u540D\u6216\u90AE\u7BB1", example: "admin" }, password: { required: true, type: () => String, description: "\u5BC6\u7801", example: "Admin123!" } }, "RegisterDto": { username: { required: true, type: () => String, description: "\u7528\u6237\u540D", example: "admin" }, password: { required: true, type: () => String, description: "\u5BC6\u7801", example: "Admin123!", minLength: 8, pattern: "/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/" }, email: { required: true, type: () => String, description: "\u90AE\u7BB1", example: "admin@example.com", format: "email" } }, "RefreshTokenDto": { refreshToken: { required: true, type: () => String, description: "\u5237\u65B0Token", example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..." } } }], [import("./modules/demo/entities/demo.entity"), { "Demo": { name: { required: true, type: () => String, description: "\u540D\u79F0", example: "\u6D4B\u8BD5\u540D\u79F0" }, description: { required: false, type: () => String, description: "\u63CF\u8FF0", example: "\u8FD9\u662F\u4E00\u6BB5\u63CF\u8FF0\u6587\u672C" } } }], [import("./modules/demo/dtos/demo.dto"), { "CreateDemoDto": { name: { required: true, type: () => String, description: "\u540D\u79F0", example: "\u6F14\u793A\u6570\u636E" }, description: { required: false, type: () => String, description: "\u63CF\u8FF0", example: "\u8FD9\u662F\u4E00\u6761\u6F14\u793A\u6570\u636E" } }, "UpdateDemoDto": {}, "PageDemoDto": { keyword: { required: false, type: () => String, description: "\u641C\u7D22\u5173\u952E\u5B57", example: "\u6D4B\u8BD5" }, startTime: { required: false, type: () => Date, description: "\u5F00\u59CB\u65F6\u95F4", example: "2024-01-01" }, endTime: { required: false, type: () => Date, description: "\u7ED3\u675F\u65F6\u95F4", example: "2024-12-31" } }, "CreateDemoTreeDto": { name: { required: true, type: () => String, description: "\u8282\u70B9\u540D\u79F0", example: "\u65B0\u8282\u70B9" }, description: { required: false, type: () => String, description: "\u8282\u70B9\u63CF\u8FF0", example: "\u8FD9\u662F\u4E00\u4E2A\u65B0\u7684\u6811\u8282\u70B9" }, parentId: { required: false, type: () => Number, description: "\u7236\u8282\u70B9ID", example: 1 } }, "UpdateDemoTreeDto": {} }], [import("./modules/database/base/base-tree.entity"), { "BaseTreeEntity": { name: { required: true, type: () => String, description: "\u8282\u70B9\u540D\u79F0" }, description: { required: false, type: () => String, description: "\u8282\u70B9\u63CF\u8FF0" }, level: { required: true, type: () => Number, description: "\u5C42\u7EA7", default: 0 }, path: { required: true, type: () => String, description: "\u7269\u5316\u8DEF\u5F84", default: "" } } }], [import("./modules/demo/entities/demo-tree.entity"), { "DemoTree": {} }], [import("./modules/restful/dtos/delete.dto"), { "DeleteDto": { ids: { required: true, type: () => [String], description: "\u5F85\u5220\u9664\u6570\u636E\u7684ID\u5217\u8868" } } }]], "controllers": [[import("./modules/user/controllers/user.controller"), { "UserController": { "create": { type: t["./modules/user/entities/user.entity"].User }, "findAll": { type: [t["./modules/user/entities/user.entity"].User] }, "findOne": { type: t["./modules/user/entities/user.entity"].User }, "update": { type: t["./modules/user/entities/user.entity"].User }, "remove": {}, "changePassword": {} } }], [import("./modules/rbac/controllers/role.controller"), { "RoleController": { "create": { type: t["./modules/rbac/entities/role.entity"].Role }, "findAll": { type: [t["./modules/rbac/entities/role.entity"].Role] }, "findOne": { type: t["./modules/rbac/entities/role.entity"].Role }, "update": { type: t["./modules/rbac/entities/role.entity"].Role }, "remove": {}, "assignPermissions": { type: t["./modules/rbac/entities/role.entity"].Role } } }], [import("./modules/rbac/controllers/permission.controller"), { "PermissionController": { "create": { type: t["./modules/rbac/entities/permission.entity"].Permission }, "findAll": { type: [t["./modules/rbac/entities/permission.entity"].Permission] }, "findOne": { type: t["./modules/rbac/entities/permission.entity"].Permission }, "update": { type: t["./modules/rbac/entities/permission.entity"].Permission }, "remove": {} } }], [import("./modules/auth/controllers/auth.controller"), { "AuthController": { "login": {}, "register": {}, "refreshToken": {} } }], [import("./modules/demo/controllers/demo.controller"), { "DemoController": { "create": { summary: "\u521B\u5EFA\u6F14\u793A\u6570\u636E", description: "\u521B\u5EFA\u4E00\u6761\u65B0\u7684\u6F14\u793A\u6570\u636E", type: t["./modules/demo/entities/demo.entity"].Demo }, "findAll": { summary: "\u83B7\u53D6\u6F14\u793A\u6570\u636E\u5217\u8868", description: "\u83B7\u53D6\u6240\u6709\u6F14\u793A\u6570\u636E\u7684\u5217\u8868" }, "findOne": { summary: "\u83B7\u53D6\u5355\u6761\u6F14\u793A\u6570\u636E", description: "\u6839\u636EID\u83B7\u53D6\u6307\u5B9A\u7684\u6F14\u793A\u6570\u636E", type: t["./modules/demo/entities/demo.entity"].Demo }, "update": { summary: "\u66F4\u65B0\u6F14\u793A\u6570\u636E", description: "\u66F4\u65B0\u6307\u5B9AID\u7684\u6F14\u793A\u6570\u636E", type: t["./modules/demo/entities/demo.entity"].Demo }, "remove": { summary: "\u5220\u9664\u6F14\u793A\u6570\u636E", description: "\u5220\u9664\u6307\u5B9AID\u7684\u6F14\u793A\u6570\u636E" } } }], [import("./modules/demo/controllers/demo-tree.controller"), { "DemoTreeController": { "findTree": { summary: "\u83B7\u53D6\u6811\u5F62\u7ED3\u6784", description: "\u83B7\u53D6\u5B8C\u6574\u7684\u6811\u5F62\u7ED3\u6784\u6570\u636E", type: [t["./modules/core/types"].TreeNodeData] }, "findAll": { summary: "\u83B7\u53D6\u6240\u6709\u8282\u70B9\uFF08\u6241\u5E73\u7ED3\u6784\uFF09", description: "\u83B7\u53D6\u6240\u6709\u8282\u70B9\u7684\u6241\u5E73\u5217\u8868", type: [t["./modules/demo/entities/demo-tree.entity"].DemoTree] }, "findChildren": { summary: "\u83B7\u53D6\u6307\u5B9A\u8282\u70B9\u7684\u5B50\u8282\u70B9", description: "\u83B7\u53D6\u6307\u5B9A\u8282\u70B9\u7684\u76F4\u63A5\u5B50\u8282\u70B9", type: [t["./modules/demo/entities/demo-tree.entity"].DemoTree] }, "findOne": { summary: "\u83B7\u53D6\u5355\u4E2A\u8282\u70B9", description: "\u6839\u636EID\u83B7\u53D6\u6307\u5B9A\u8282\u70B9\u7684\u8BE6\u7EC6\u4FE1\u606F", type: t["./modules/demo/entities/demo-tree.entity"].DemoTree }, "create": { summary: "\u521B\u5EFA\u8282\u70B9", description: "\u521B\u5EFA\u65B0\u7684\u6811\u8282\u70B9", type: t["./modules/demo/entities/demo-tree.entity"].DemoTree }, "update": { summary: "\u66F4\u65B0\u8282\u70B9", description: "\u66F4\u65B0\u6307\u5B9A\u8282\u70B9\u7684\u4FE1\u606F", type: t["./modules/demo/entities/demo-tree.entity"].DemoTree }, "remove": { summary: "\u5220\u9664\u8282\u70B9", description: "\u5220\u9664\u6307\u5B9A\u7684\u8282\u70B9" } } }], [import("./modules/demo/controllers/demo-error.controller"), { "DemoErrorController": { "testTableNotFound": { status: 500, description: "服务器内部错误" }, "testUniqueConstraint": { status: 500, description: "服务器内部错误" }, "testNotFound": { status: 500, description: "服务器内部错误" }, "testSqlSyntax": { status: 500, description: "服务器内部错误" }, "testDeadlock": { status: 500, description: "服务器内部错误" } } }], [import("./modules/demo/controllers/demo-config.controller"), { "DemoConfigController": { "getConfig": {} } }]] } };
};